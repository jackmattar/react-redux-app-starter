{"ast":null,"code":"import _slicedToArray from \"/home/laboratoria/react-redux-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/laboratoria/react-redux-app-starter/src/hooks/hooks_container1.js\";\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport * as Reducer from '../store/hooks_state/hooks_reducer';\nimport * as ACTIONS from '../store/actions/actions';\nimport Context from '../utils/context';\n\nvar HooksContainer1 = function HooksContainer1() {\n  var context = useContext(Context); //const stateValue = useState(0)[0]\n  //const setValue = useState(0)[1]\n  //const [state, dispatch] = useReducer(reducer, initial state)\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateValue = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      useEffectValue = _useState4[0],\n      setUseEffectValue = _useState4[1];\n\n  var _useReducer = useReducer(Reducer.HooksReducer, Reducer.initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      return setUseEffectValue('useEffect Worked');\n    }, 3000);\n  }, [stateValue]);\n\n  var incrementValue = function incrementValue() {\n    setValue(stateValue + 1);\n  };\n\n  var decrementValue = function decrementValue() {\n    setValue(stateValue - 1);\n  };\n\n  var changeuseEffectValue = function changeuseEffectValue() {\n    setUseEffectValue('Some string');\n  };\n\n  var handleDispatchtrue = function handleDispatchtrue() {\n    //dispatch(ACTIONS.SUCCESS)\n    //dispatch(type: \"SUCESS\")\n    dispatch(ACTIONS.success());\n  };\n\n  var handleDispatchfalse = function handleDispatchfalse() {\n    //dispatch(ACTIONS.FAILURE)\n    //dispatch(type: \"FAILURE\")\n    dispatch(ACTIONS.failure());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"React Hooks\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return incrementValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Inc Local State \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return decrementValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Dec Local State \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return changeuseEffectValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Change Use Effect \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleDispatchtrue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" Dispatch True \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleDispatchfalse();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Dispatch False \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return context.addGlobalValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Add Global Value \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return context.decGlobalValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Dec Global Value \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return context.dispatchContextTrue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" Add Global Value \"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return context.dispatchContextFalse();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Dec Global Value \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, useEffectValue ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" \", useEffectValue) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" No value \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, state.stateprop1 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" state prop1 is true\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" state prop1 is false \")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Local State: \", stateValue), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Global State: \", context.valueGlobalState)));\n};\n\nexport default HooksContainer1;","map":{"version":3,"sources":["/home/laboratoria/react-redux-app-starter/src/hooks/hooks_container1.js"],"names":["React","useState","useEffect","useReducer","useContext","Reducer","ACTIONS","Context","HooksContainer1","context","stateValue","setValue","useEffectValue","setUseEffectValue","HooksReducer","initialState","state","dispatch","setTimeout","incrementValue","decrementValue","changeuseEffectValue","handleDispatchtrue","success","handleDispatchfalse","failure","addGlobalValue","decGlobalValue","dispatchContextTrue","dispatchContextFalse","stateprop1","valueGlobalState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport * as Reducer from '../store/hooks_state/hooks_reducer';\nimport * as ACTIONS from '../store/actions/actions'\nimport Context from '../utils/context'\n\nconst HooksContainer1 = () => {\n\n  const context = useContext(Context)\n\n  //const stateValue = useState(0)[0]\n  //const setValue = useState(0)[1]\n  //const [state, dispatch] = useReducer(reducer, initial state)\n  const [stateValue, setValue] = useState(0)\n  const [useEffectValue, setUseEffectValue] = useState(null)\n  const [state, dispatch] = useReducer(Reducer.HooksReducer, Reducer.initialState)\n\n  useEffect(() => {\n    setTimeout(() => \n      setUseEffectValue('useEffect Worked'), 3000)\n  }, [stateValue])\n\n  const incrementValue = () => {\n    setValue(stateValue + 1)\n  }\n\n  const decrementValue = () => {\n    setValue(stateValue -1)\n  }\n\n  const changeuseEffectValue = () => {\n    setUseEffectValue('Some string')\n  }\n\n  const handleDispatchtrue = () => {\n    //dispatch(ACTIONS.SUCCESS)\n    //dispatch(type: \"SUCESS\")\n    dispatch(ACTIONS.success())\n  }\n\n  const handleDispatchfalse = () => {\n    //dispatch(ACTIONS.FAILURE)\n    //dispatch(type: \"FAILURE\")\n    dispatch(ACTIONS.failure())\n  }\n\n    return(\n      <div>\n        React Hooks\n        <br/>\n        <button onClick = { () => incrementValue()}> Inc Local State </button>\n        <button onClick = { () => decrementValue()}> Dec Local State </button>\n        <button onClick = { () => changeuseEffectValue()}> Change Use Effect </button>\n        <button onClick = { () => handleDispatchtrue()}> Dispatch True </button>\n        <button onClick = { () => handleDispatchfalse()}> Dispatch False </button>\n        <button onClick = { () => context.addGlobalValue()}> Add Global Value </button>\n        <button onClick = { () => context.decGlobalValue()}> Dec Global Value </button>\n        <button onClick = { () => context.dispatchContextTrue()}> Add Global Value </button>\n        <button onClick = { () => context.dispatchContextFalse()}> Dec Global Value </button>\n        <div>\n          <p>\n            {useEffectValue?<p> {useEffectValue}</p>:<p> No value </p>\n            }\n          </p>\n          <p>\n            {state.stateprop1\n            ?<p> state prop1 is true</p>\n            :<p> state prop1 is false </p>}\n          </p>\n          <p>\n            Local State: {stateValue}\n          </p>\n          <p>\n            Global State: {context.valueGlobalState}\n          </p>\n        </div>\n      </div>\n    )\n}\n\nexport default HooksContainer1;\n\n"]},"metadata":{},"sourceType":"module"}